// Generated by view binder compiler. Do not edit!
package com.example.storesearching.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.storesearching.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGalleryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonRegistration;

  @NonNull
  public final EditText editTextUserName;

  @NonNull
  public final EditText editTextUserPassword;

  @NonNull
  public final TextView textLogin;

  @NonNull
  public final TextView textPasswordLabel;

  @NonNull
  public final TextView textUserNameLabel;

  private FragmentGalleryBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonLogin,
      @NonNull Button buttonRegistration, @NonNull EditText editTextUserName,
      @NonNull EditText editTextUserPassword, @NonNull TextView textLogin,
      @NonNull TextView textPasswordLabel, @NonNull TextView textUserNameLabel) {
    this.rootView = rootView;
    this.buttonLogin = buttonLogin;
    this.buttonRegistration = buttonRegistration;
    this.editTextUserName = editTextUserName;
    this.editTextUserPassword = editTextUserPassword;
    this.textLogin = textLogin;
    this.textPasswordLabel = textPasswordLabel;
    this.textUserNameLabel = textUserNameLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_gallery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGalleryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_login;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.button_Registration;
      Button buttonRegistration = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegistration == null) {
        break missingId;
      }

      id = R.id.editTextUserName;
      EditText editTextUserName = ViewBindings.findChildViewById(rootView, id);
      if (editTextUserName == null) {
        break missingId;
      }

      id = R.id.editTextUserPassword;
      EditText editTextUserPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextUserPassword == null) {
        break missingId;
      }

      id = R.id.textLogin;
      TextView textLogin = ViewBindings.findChildViewById(rootView, id);
      if (textLogin == null) {
        break missingId;
      }

      id = R.id.textPasswordLabel;
      TextView textPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (textPasswordLabel == null) {
        break missingId;
      }

      id = R.id.textUserNameLabel;
      TextView textUserNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (textUserNameLabel == null) {
        break missingId;
      }

      return new FragmentGalleryBinding((ConstraintLayout) rootView, buttonLogin,
          buttonRegistration, editTextUserName, editTextUserPassword, textLogin, textPasswordLabel,
          textUserNameLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
