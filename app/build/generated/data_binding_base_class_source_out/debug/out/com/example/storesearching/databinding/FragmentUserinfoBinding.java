// Generated by view binder compiler. Do not edit!
package com.example.storesearching.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.storesearching.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserinfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button ChangeButton;

  @NonNull
  public final TextView DescriptionTextLabel;

  @NonNull
  public final Button ExitButton;

  @NonNull
  public final TextView UserInfoLabel;

  @NonNull
  public final TextView UserNameLabel;

  @NonNull
  public final TextView UserpreferenceLabel;

  private FragmentUserinfoBinding(@NonNull ConstraintLayout rootView, @NonNull Button ChangeButton,
      @NonNull TextView DescriptionTextLabel, @NonNull Button ExitButton,
      @NonNull TextView UserInfoLabel, @NonNull TextView UserNameLabel,
      @NonNull TextView UserpreferenceLabel) {
    this.rootView = rootView;
    this.ChangeButton = ChangeButton;
    this.DescriptionTextLabel = DescriptionTextLabel;
    this.ExitButton = ExitButton;
    this.UserInfoLabel = UserInfoLabel;
    this.UserNameLabel = UserNameLabel;
    this.UserpreferenceLabel = UserpreferenceLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserinfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserinfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_userinfo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserinfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ChangeButton;
      Button ChangeButton = ViewBindings.findChildViewById(rootView, id);
      if (ChangeButton == null) {
        break missingId;
      }

      id = R.id.DescriptionTextLabel;
      TextView DescriptionTextLabel = ViewBindings.findChildViewById(rootView, id);
      if (DescriptionTextLabel == null) {
        break missingId;
      }

      id = R.id.ExitButton;
      Button ExitButton = ViewBindings.findChildViewById(rootView, id);
      if (ExitButton == null) {
        break missingId;
      }

      id = R.id.UserInfoLabel;
      TextView UserInfoLabel = ViewBindings.findChildViewById(rootView, id);
      if (UserInfoLabel == null) {
        break missingId;
      }

      id = R.id.UserNameLabel;
      TextView UserNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (UserNameLabel == null) {
        break missingId;
      }

      id = R.id.UserpreferenceLabel;
      TextView UserpreferenceLabel = ViewBindings.findChildViewById(rootView, id);
      if (UserpreferenceLabel == null) {
        break missingId;
      }

      return new FragmentUserinfoBinding((ConstraintLayout) rootView, ChangeButton,
          DescriptionTextLabel, ExitButton, UserInfoLabel, UserNameLabel, UserpreferenceLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
